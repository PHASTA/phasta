# PHASTA Version 1.6 Input File
# Here you will
# find the default values for everything that is allowed to have a
# default. Some things are not allowed to default and must be entered
# in this file.  In most cases, the acceptable inputs also appear in
# the input.config file. To add acceptable inputs you should only have
# to modify:
#     input_asci.cc :which matches the string and translates it to the 
#                    parameter change. If it is a new parameter, you must
#                    modify:
#
#                      common.h (to carry new parameter through code)
#                      common_c.h (to carry the parameter from C to Fortran)
#     
##

FLOW CONTROL PARAMETERS
{
     Duct Geometry Type : 0   # flag for geometry specific modeling 0 is safe
     Duct Outlet ID : 0   #If active, give it the surfID of the outlet
            Duct Uniform Outlet Pressure: NODEFAULT   # outPres1 must be set IFF above not zero

#inlet boundary conditions
     Take BC from IC at Inlet : 0 # iI2Binlet, give the surf ID which want to use taking BC from IC
     Inlet Bulk x Velocity: NODEFAULT  # inletVelX
#outlet pressure
# the next pair seem to be redundent/obsolete...figure out why we needed Duct Outlet???
     Set Outlet Pressure: 0 # isetOutPres, give the surf ID which want to be set 
     Uniform Outlet Pressure: NODEFAULT  # outPres1
#initial condition
     Specify Initial Conditions: 0 #isetInitial
     Initial X Velocity: NODEFAULT  #xvel_ini
     Initial Y Velocity:  NODEFAULT #yvel_ini
     Initial Z Velocity: NODEFAULT  #zvel_ini
     Initial Temp: NODEFAULT       #temp_ini
     Initial Pressure: NODEFAULT   #pres_ini
     Initial Scalar 1: NODEFAULT   #evis_ini
#initial condition eddy viscosity ramp
     Specify Initial Eddy Viscosity Ramp: 0
     Initial Scalar 1 ramp start: NODEFAULT
     Initial Scalar 1 ramp end:   NODEFAULT
     Initial Scalar 1 low:        NODEFAULT
     Initial Scalar 1 high:       NODEFAULT
#initial condition for Duct
     Set Initial Condition for Duct : 0 #isetInitial_Duct
#inlet condition for Duct
     Set Inlet Condition for Duct : 0  #isetInlet_Duct
#blowing condition for Duct
     Set Blowing Condition for Duct:0 #isetBlowing_Duct

#suction condition for Duct
     Duct Set Suction Surface ID:            0    #isetSuctionID_Duct - suction patch surface IDs
# note the zero previous causes the below not to be read but we include what would
# be read for completeness 
     Duct Bottom Suction Normal Velocity:     NODEFAULT    #suctionVbottom
     Duct Lower Side Suction Normal Velocity: NODEFAULT  #suctionVside_lower
     Duct Upper Side Surface Normal Velocity: NODEFAULT  #suctionVside_upper
     Duct Top Surface Normal Velocity:        NODEFAULT    #suctionVtop


     Number of Blower Surfaces:     0
# note the zero previous causes the below not to be read but we include what would
# be read for completeness.  If number of blower surfaces was 2 there would be two
# columns like you see below.
     Blower Enable:                 0       0      #set greater than 0 to enable
     Blower Surface ID:             802     803    
     Blower Mode:                   0       0      #constant = 0, trapezoid = 1, sinusoid = 2
     Blower Cycle Period:           -1      0.010  #s   set less than zero or greater than 1 to use constant blowing
     Blower Full On Period:         -1      0.000  #s 
     Blower Rise Time:              -1      0.004  #s
     Blower Fall Time:              -1      0.004  #s
     Blower Maximum u_normal:       1.62    28.56  #m/s
     Blower Minimum u_normal:       0.0     0.0    #m/s
     Blower Temperature:            305     305    #K
     Blower Eddy Viscosity:         1.6e-3  1.6e-3 #m^2/s
     Blower BL Thickness:           0.001   0.001
     Blower BL Thickness (scalar):  0.0005  0.0005

#eddy viscosity control
     Override Eddy Viscosity:                0			#ctrlvari.isetEV_IC_BC
     Eddy Viscosity Value for Override:      NODEFAULT	#ctrlvar.evis_IC_BC

}

SOLUTION CONTROL
{

     Equation of State: NODEFAULT
#     Equation of State: Compressible       # sets ipress=0 matflag(1,n)
#     Equation of State: Incompressible     # sets ipress=-1 matflag(1,n)
     Viscous Control:   Viscous            #replaces navier (0 no, 1 yes)
     Turbulence Model:  No-Model         #  No-Model, RANS-SA,
                                         #  RANS, RANS-KE,  LES, DES97, DDES 
     Number of Timesteps:    NODEFAULT     #replaces nsteps(1) (ntseq wired =1)
     Time Step Size: NODEFAULT             # Delt(1)
     Solve Flow : True            # solveflow         
     Solve Heat : False           # solveheat     
     Solve Scalars :   0          # nsclrS
     Solve Level Set : 0          # iLSet
                                  # total number of scalars must be <=4
                                  #    impl=10*logical(solflow)+nsclr*100 + 
                                  #          1*logical(solveheat)  
} Control

MATERIAL PROPERTIES
{
     Shear Law: Constant Viscosity  # ishear=0  => matflag(2,n)
     Bulk Viscosity Law: Constant Bulk Viscosity # ibulk=0 => matflag(3,n)
     Conductivity Law: Constant Conductivity # icond=0 => matflag(4,n)
     Viscosity: NODEFAULT       # fills datmat (2 values REQUIRED if iLset=1)
     Density: 1.0               # ditto
     Thermal Conductivity: 0.2  # ditto
     Prandtl Number: 0.72  # Compressible code sets diffusivity with this
     Scalar Diffusivity: 0.2    # fills scdiff(1:nsclrS)
     Body Force Option: None    # ibody=0 => matflag(5,n)
#     Body Force Option: Vector # ibody=1 => matflag(5,n)
#     Body Force Option: Boussinesq # ibody=2 => matflag(5,n)
#     Body Force Option: User e3source.f  # ibody=3 => matflag(5,n)
#     Body Force Option: Cooling Analytic  # ibody=4 => matflag(5,n)
#     Body Force Option: Cooling Initial Condition  # ibody=5 => matflag(5,n)
     Body Force: 0.0 0.0 0.0    # (datmat(i,5,n),i=1,nsd)
     Body Force Pressure Gradient: 0.0 0.0 0.0    # (datmat(i,7,n),i=1,nsd)
     Zero Mean Pressure : False  # True causes pressure avg set to zero
                                 # ONLY appropriate if no pressure BCs.
     Rotating Frame of Reference: False
     Rotating Frame of Reference Rotation Rate: 0. 0. 0.
      Surface Tension Option: No	#isurf=0
#     Surface Tension Option: Yes	#isurf=1
	Maximum Value of Sponge Parameter: 1.0
	Inflow Cooling Sponge Ends at z: 12.0
	Outflow Cooling Sponge Begins at z: 24.0
	Radial Cooling Sponge Begins at r: 7.5
        Sponge Growth Coefficient Outflow : .1
        Sponge Growth Coefficient Inflow  : .5
	Sponge for Continuity Equation : False
        Sponge for x Momentum Equation : False
        Sponge for y Momentum Equation : False
        Sponge for z Momentum Equation : False
        Sponge for Energy Equation : False

# damp vortices near outlet by ramping up viscosity
        Ramp Up Viscosity Near Outlet: 0        #irampViscOutlet
        Stretch X Coordinate Near Outlet: 0 #istretchOutlet
}

OUTPUT CONTROL
{
     Number of Timesteps between Restarts: 500 #replaces nout/ntout
     Number of SyncIO Files: 1        # nsynciofiles
     Verbosity Level: 3                        #replaces necho
     Print Statistics: False          #False=> ioform=1, True=> ioform=2
     Print Wall Fluxes: False         #No current action but it will come later
     Print Residual at End of Step: False # T lstres=1 F lstres=0
     Print Error Indicators: False       # F ierrcalc = 0, T ierrcalc = 1 
     Print FieldView: False              # outpar.iofieldv
     Print ybar: False                   # F ioybar = 0, T ioybar = 1
     Print vorticity: False              # F ivort = 0, T ivort = 1
     Number of Steps in a Cycle: 0       # nstepsincycle
     Number of Phases in a Cycle: 0      # nphasesincycle
     Number of Initial Cycles to Skip in Phase Average: 0 # ncycles_startphaseavg
     Print Velocity Hessian: False       # F ihessian = 0, T ihessian = 1 
     Number of Error Smoothing Iterations: 3 # ierrsmooth
     Surface ID for Integrated Mass: 1   # isrfIM
     Number of Force Surfaces: 0         # nsrfCM
     Surface ID's for Force Calculation: NODEFAULT  # nreadlist(j),j=1,nsrfCM
# this must be processed as in input.f or passed to input.f for processing
# not read if nsrfCM=0

     Ranks per core: 1 # for varts only
     Cores per node: 1 # for varts only
# By default, with these 2 settings, 
#   probe 1 will be treated by rank (numpe-1)
#   probe 2 will be treated by rank (numpe-1)-1
#   probe 3 will be treated by rank (numpe-1)-2
# On BGQ, with 4 and 16 respectively, 
#   probe 1 will be treated by rank (numpe-1)
#   probe 2 will be treated by rank (numpe-1)-1*(4*16) on another node
#   probe 3 will be treated by rank (numpe-1)-2*(4*16) on another node

     Data Block Format : binary #iotype, options 'binary','ascii'
}

LINEAR SOLVER
{
#     Solver Type: ACUSIM                           # iprjFlag=0 ipresPrjFlag=0
     Solver Type: ACUSIM with P Projection          # iprjFlag=0 ipresPrjFlag=1
#     Solver Type: ACUSIM with Velocity Projection  # iprjFlag=1 ipresPrjFlag=0
#     Solver Type: ACUSIM with Full Projection      # iprjFlag=1 ipresPrjFlag=1
#     The above 4 are for incompressible flow.

#     The next two are for compresible flow. 
#     Solver Type: GMRES EBE
#     Solver Type: GMRES Matrix Free

     Number of GMRES Sweeps per Solve: 1      # replaces nGMRES
     Number of Krylov Vectors per GMRES Sweep: 50           # replaces Kspace
     Number of Solves per Left-hand-side Formation: 1  #nupdat/LHSupd(1)
     Tolerance on Momentum Equations: 0.1                   # epstol(1)
     Number of Solves of Temperature per Left-hand-side Formation: 1 
     Temperature Solver Tolerance: 0.001
     Number of Solves of Scalar 1 per Left-hand-side Formation: 1 
     Number of Solves of Scalar 2 per Left-hand-side Formation: 1 
     Number of Solves of Scalar 3 per Left-hand-side Formation: 1 
     Number of Solves of Scalar 4 per Left-hand-side Formation: 1 
     Scalar 1 Solver Tolerance: 0.001
     Scalar 2 Solver Tolerance: 0.001
     Scalar 3 Solver Tolerance: 0.001
     Scalar 4 Solver Tolerance: 0.001
     Tolerance on ACUSIM Pressure Projection: 0.1           # prestol 
     Minimum Number of Iterations per Nonlinear Iteration: 10  # minIters
     Maximum Number of Iterations per Nonlinear Iteration: 200 # maxIters
     Velocity Delta Ratio :0.   #utol deltol(1,1)  Stop factor for steady solve
     Pressure Delta Ratio :0.   #ptol deltol(1,2)  Stop factor for steady solve
     Number of Velocity Projection Vectors: 10  #nPrjs
     Number of Pressure Projection Vectors: 10  #nPresPrjs
     ACUSIM Verbosity Level               : 0   #iverbose
}

DISCRETIZATION CONTROL
{
     Basis Function Order: 1                 # ipord
     Time Integration Rule: First Order      # 1st Order sets rinf(1) -1
#     Time Integration Rule: Second Order    # Second Order sets rinf next
#     Time Integration Rho Infinity: 0.5     # rinf(1) Only used for 2nd order
     Predictor at Start of Step : Same Velocity  # ipred=1 (more options later)
      Weak Form: SUPG # alternate is Galerkin only for compressible
     Flow Advection Form: Convective        # iconvflow=2
#     Flow Advection Form: Conservative       # iconvflow=1
     Scalar Advection Form: Convective       # iconvsclr=2
#    Scalar Advection Form: Conservative     # iconvsclr=1
#     Use Conservative Scalar Convection Velocity: True
     Use Conservative Scalar Convection Velocity: False
     Tau Matrix: Diagonal-Shakib                #itau=0
#     Tau Matrix: Diagonal-Franca               #itau=1
#     Tau Matrix: Diagonal-Jansen(dev)          #itau=2
#     Tau Matrix: Diagonal-Compressible         #itau=3
#     Tau Matrix: Matrix-Mallet                 #itau=10
     Tau Time Constant: 1.                      #dtsfct
     Tau C Scale Factor: 1.0                    # taucfct  best value depends                                                 # on Tau Matrix chosen
     Remove Time Term from Stabilization: 0 #iremoveStabTimeTerm
     Discontinuity Capturing: Off               # Sets IDC to 0 for now
#    Discontinuity Capturing:  "DC-mallet"      #Sets IDC to 1
     Scalar Discontinuity Capturing: 0 0        #Sets idcsclr to [0 0], no DC 
                                                #on any scalar
# idcsclr(1)--> Type of DC (see flow), idcsclr(2)---> on which scalar DC acting
#     Scalar Discontinuity Capturing: 1 1       #Sets DC=1 on first scalar
#     Scalar Discontinuity Capturing: 1 2       #Sets DC=1 on second scalar
     Include Viscous Correction in Stabilization: True    # if p=1 idiff=1
                                                          # if p=2 idiff=2  
     Lumped Mass Fraction on Left-hand-side: 0.           # flmpl
     Lumped Mass Fraction on Right-hand-side: 0.          # flmpr
     Dump CFL: False                           #iCFLworst=0
     Quadrature Rule on Interior: 2           #int(1)
     Quadrature Rule on Boundary: 2           #intb(1)
     Number of Elements Per Block: 64        #ibksiz
     Entropy Form of Pressure Constraint on Weight Space: 0  # 1 turns it on

     LHS BC heat flux enable: 0
}

SOLUTION SCALING PARAMETERS
{
     Density: 1.     #ro    This is used in sponge
     Velocity: 1.    #vel  This affects tau currently
     Pressure: 1.    #pres This is used in sponge
     Temperature: 1. #temper  This scales diagonal energy tau (see e3tau.f)
     Entropy: 1.     #entrop
}

TURBULENCE MODELING PARAMETERS  
{  #                                  lines below are only read if ||| is true
	Turn Off Source Terms for Scalars: False
	Decay Multiplier for Scalars : 1.0  (this number multiplies scalars each step)  
	Number of Homogenous Directions : 0
	Dynamic Model Type : Standard   # adds zero to iles       LES
#	Dynamic Model Type : Bardina    # adds 10   to iles       LES
#	Dynamic Model Type : Projection # adds 20   to iles       LES
        Filter Integration Rule: 1  #ifrule adds ifrule-1 to iles LES
        Double Filter : False  #Filter applied twice to create wide filter?
	Model Statistics: False #Collect statistics on model?
	Model/SUPG Dissipation : False # Get diss. due to model and SUPG stresses?

	DES Edge Length: NODEFAULT # shorter edges are pure les while twice longer edges are pure RANS, finally in between is a blend
	DES SA Minimum Edge Length: 0.0 # limit edge length for DES based on SA model

#
# The following are models under development (at various stages of validation)
#
	Dynamic Sub-Model Type: None
#	Dynamic Sub-Model Type: DFWR  # dmc with dynamic filter width ratio
#	Dynamic Sub-Model Type: SUPG  # dmc w/ SUPG interation
#	Dynamic Sub-Model Type: ConsistentProj # Consistent projection filter dmc
	Projection Filter Type: Linear         # Projection onto lins. as the filter  
#       Projection Filter Type: Quadratic      # Projection onto quads as the filter.
       	Lumping Factor for Filter : 0.5	       # Lumping factor for projection filter
	Turbulence Wall Model Type: None  #itwmod=0                RANSorLES
#	Turbulence Wall Model Type: Slip Velocity  #itwmod=1       RANSorLES
#	Turbulence Wall Model Type: Effective Viscosity  #itwmod=2 RANSorLES
	Velocity Averaging Steps : 500. # wtavei= 1/this           RANSorLES
	Dynamic Model Averaging Steps : 500. # dtavei= 1/this      LES
#  negative values to the two previous entries make their value ISTEP in code
#  Anil...leave as any negative value
	Filter Width Ratio        : 3.  # fwr1                     LES
	Target Viscosity For Step NSTEP: 0 # uses linear ramp between start
                                           # with a zero here the code disables
                                           # that feature and holds value
	Limit u1 : 0. 0. 0. # switch min max   change switch from zero to activate
	Limit u2 : 0 0 0 
	Limit u3 : 0 0 0 
	Limit Pressure : 0 0 0 
	Limit Temperature : 0 0 0 
	Limit Scalar 1 : 0 0 0 
	Limit Scalar 2 : 0 0 0 
	Limit Scalar 3 : 0 0 0 
	Limit Scalar 4 : 0 0 0 

        Number of Father Nodes: 0   # value of SONFATH

        Ramp Inflow : False
        Mdot Ramp Inflow Start and Stop : 0.0 0.0
        Mdot Ramp Lower FC Start and Stop : 0.0 0.0
        Mdot Ramp Upper FC Start and Stop : 0.0 0.0

}

SPEBC MODELING PARAMETERS  
{
	SPEBC Model Active:-1  # irscale=-1 means not active, see genscale.f
# Next lines required only if above not non-negative
	Interpolate Pressure: 0                   # intpres
	Distance between Planes: NODEFAULT	  # plandist
	Theta Angle of Arc: 0.0  # thetag = 0.0 for cartisian case
	Distance for Velocity Averaging: NODEFAULT # ds
#	Tolerance for cylindrical case to account for discratisation of 
# 	the curved surface
	SPEBC Cylindrical Tolerance: 0.01         # tolerence
	Radius of recycle plane: 0.5 #radcyl only needed in cylindrical case
 	Inlet Boundary Layer Thickness: NODEFAULT # rbltin
# Velocity Averaging Steps needed for SPEBC
	Vertical Velocity Scale Factor: NODEFAULT # rvscal                	
}
CARDIOVASCULAR MODELING PARAMETERS  
{	
	Time Varying Boundary Conditions From File: False # F itvn=0 T itvn=1
        BCT Time Scale Factor : 1.0
	Number of Coupled Surfaces: 0 # icardio
	Pressure Coupling: None # Explicit, Implicit, P-Implicit 
                                   # none ipvsq=0, expl ipvsq=1, 
                                   # impl ipvsq=2, P-Imp ipvsq=3	
	Number of Resistance Surfaces: 0 # numResistSrfs	
	List of Resistance Surfaces: NODEFAULT # nsrflistResist(j), j=0,MAXSURF
	Resistance Values : NODEFAULT  # ValueListResist(j),j=1,icardio
	Number of Impedance Surfaces: 0 # numImpSrfs	
	List of Impedance Surfaces: NODEFAULT # nsrflistImp(j), j=0,MAXSURF
	Impedance From File: False #False impfile=0, True impfile=1
        Number of RCR Surfaces: 0 # numRCRSrfs
	List of RCR Surfaces: NODEFAULT # nsrflistRCR(j), j=0,MAXSURF
	RCR Values From File: False #False ircrfile=0, True ircrfile=1
	Deformable Wall: False #False ideformwall=0, True ideformwall=1
     	Density of Vessel Wall: NODEFAULT # rhovw
        Thickness of Vessel Wall: NODEFAULT # thicknessvw
        Young Mod of Vessel Wall: NODEFAULT # evw
	Poisson Ratio of Vessel Wall: 0.5 # rnuvw
	Shear Constant of Vessel Wall: NODEFAULT # rshearconstantvw
	Wall Mass Matrix for LHS: True   # iwallmassfactor=1
#	Wall Mass Matrix for LHS: False  # iwallmassfactor=0
	Wall Stiffness Matrix for LHS: True   # iwallstiffactor=1
#	Wall Stiffness Matrix for LHS: False  # iwallstiffactor=0
        Viscous Flux Flag: True # iviscflux=1
#       Viscous Flux Flag: False # iviscflux=0
 	}


LEVEL SET MODELING PARAMETERS  
{
#(Only read if Solve Level Set is true=> iLS.ne.0)
	Number of Elements Across Interface: 3 #epsilon_ls 
	Number of Elements Across Interface for Redistancing: 3 #epsilon_lsd
	Apply Volume Constraint: False   #ivconstraint=0
#	Apply Volume Constraint: True  #ivconstraint=1
        Pseudo Time step for Redistancing: 0.001 #dtset
        Explicit Solve for Redistance Field: 0 #iExpLSSclr2 (0-implicit, 1-explicit)
        Explicit Solve for Scalar 1 Field: 0 #iExpLSSclr1 (0-implicit, 1-explicit)
 	}

DISABLED FEATURES 
{
	iALE  : 0
	icoord: 0
	irs   : 2 
	iexec : 1
	ntseq : 1
	imap  : 0 
#	ivart : 2   # the old practice of using ivart to 
#                    # set advective form is depricated
	CFLfl : 1   #CFLfl(1) 
	CFLsl : 10   #CFLsl(1)
        iepstm: 10
}



STEP SEQUENCE
{

      Step Construction  : 0 1
}

#AMG PARAMETERS  < Note:  you will need to compile the code with AMG=1 as an exported environment variable to link in PARPACK and have the following options available to you>
{
#
    Employ AMG: False		         # True-1/False-0 (irun_amg = 1, see solfar.f)
    Run AMG As CG-preconditioner: 0      # 0: no-run. 
                                         # 1: always preconditioned by AMG. 
                                         # 2: first try plain CG, if hit plateau, restart CG with AMG. 
                                         # 3: first try plain CG, if hit maximum iteration, restart CG with AMG.
    Strong Criterion Eps: 0.25           # "strong criterion" Stuben constant (strong_eps)
    AMG Convergence Eps: 1.0E-7          # AMG convergence eps  
    AMG Verbosity: 10                    # set to 1 for output/0 for no
    AMG Neg_Sten: 1                      # set to 1 for only negs, 0 for pos and neg coeff's
    AMG Nlevel: 10                        # number of levels for tAMG cycle, 2-V cycle (MAX IS 10)
    AMG Coarsest Solver : 1              # 0: smoother  1: smoother to solve , 2:direct
    AMG Relaxation Omega: -1             # Omega Relaxation Factor GS / Jac, <0 for GS, >0 for 1/omega of Jacobi
    AMG Freeze Setup: 10000              # how many solves per setup of AMG
    AMG Interpolation Type: Direct       # Standard or Direct
    AMG Truncation Set: 0.5              # Interpolation/Prolongation truncate if less than value times diagonal
    AMG GGB nev: 10                      # number of eigenvalues in GGB projection (-1 means no GGB)
    AMG GGB ncv: 30                      # number of memory slots allocated for parpack setup
#    AMG Smoother Type: Gauss-Seidel      # Specify smoother
#    AMG Smoother Type: ChebyShev      # Specify smoother
    AMG Smoother Type: MLS      # Specify smoother
    AMG Chebyshev Eigenvalue ratio: 0.1  # Eigen ratio for Chebyshev smoothing: smoothing for ev from beta-ratio*beta
    AMG MLS Degree: 2                    # polynomial smoothing degree {1,2,3,4}, for MLS and Chebyshev only
    AMG PPE Scale: 2                     # 0: original, 1: by diag(C), 2: by diag(PPE)
    AMG Run Reduced Serial: 0            # <DEPRICATED> 0: no run, N: reduced serial if run serial; output information if parallel.
}

#NASA INLET
#{
     Apply Atmospheric Perturbation: 0 #BCdtKW =0 none, =1 pres, =2 AoA
     Base Time Step of Perturbation: 100 #tsBase
     Frequency of Pressure Perturbation: 1000 #PresFreq
     Amplitude of Pressure Perturbation: 100 #PresAmp
#     Frequency of AoA Perturbation: 1000 #AlphaFreq
#     Amplitude of AoA Perturbation: 0.05 #AlphaAmp (degrees)
#}

